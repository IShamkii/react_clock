{"version":3,"sources":["components/clockFC.tsx","AppFC.tsx","index.tsx"],"names":["ClockFC","clockName","useState","Date","today","setToday","useEffect","updateToday","window","setInterval","newDate","console","info","toUTCString","slice","clearInterval","className","getRandomName","value","now","toString","clockReducer","state","action","type","prevClockName","payload","AppFC","hasClock","setHasClock","firstRender","useRef","useReducer","dispatch","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","printClockName","removeEventListener","current","debug","ReactDOM","render","getElementById"],"mappings":"+LAOaA,EAAgC,SAAC,GAGvC,IAFLC,EAEI,EAFJA,UAGA,EAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,aAAY,WACrC,IAAMC,EAAU,IAAIP,KAEpBE,EAASK,GAGTC,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,MAE9C,KAEH,OAAO,kBAAMC,cAAcR,MAE1B,IAGD,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,IAGF,YAED,sBAAMe,UAAU,cAAhB,SACGZ,EAAMS,cAAcC,OAAO,IAAK,SC5BzC,SAASG,IACP,IAAMC,EAAQf,KAAKgB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAUlB,IAAMG,EAAe,SACnBC,EACAC,GAEA,MACO,mBADCA,EAAOC,KAEJ,2BACFF,GADL,IAEEG,cAAeH,EAAMrB,UACrBA,UAAWsB,EAAOG,UAGbJ,GAIAK,EAAkB,WAC7B,MAAgCzB,oBAAS,GAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACMC,EAAcC,kBAAO,GAE3B,EAA0BC,qBAAWX,EAAc,CACjDpB,UAAW,UACXwB,cAAe,OAFjB,mBAAOH,EAAP,KAAcW,EAAd,KAKQhC,EAA6BqB,EAA7BrB,UAAWwB,EAAkBH,EAAlBG,cAEbS,EAAkB,SAACC,GACvBA,EAAMC,iBAENP,GAAY,IAGRQ,EAAkB,WACtBR,GAAY,IAgCd,OA7BAvB,qBAAU,WACRgC,SAASC,iBAAiB,cAAeL,GACzCI,SAASC,iBAAiB,QAASF,GAEnC,IAAMG,EAAiBhC,OAAOC,aAAY,WACxCwB,EAAS,CAAET,KAAM,iBAAkBE,QAAST,QAC3C,MAEH,OAAO,WACLqB,SAASG,oBAAoB,cAAeP,GAC5CI,SAASG,oBAAoB,QAASJ,GACtCtB,cAAcyB,MAEf,IAEHlC,qBAAU,WACJwB,EAAYY,QACdZ,EAAYY,SAAU,EAKpBd,GAEFjB,QAAQgC,MAAR,uBAA8BlB,EAA9B,eAAkDxB,MAGnD,CAACA,IAGF,sBAAKe,UAAU,MAAf,UACE,6CAECY,GACC,cAAC,EAAD,CACE3B,UAAWA,QC1FrB2C,IAASC,OAEP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.84f9901b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ntype ClockProps = {\n  clockName: string\n  // onUpdateToday: (date: Date) => void;\n};\n\nexport const ClockFC: React.FC<ClockProps> = ({\n  clockName,\n  // onUpdateToday,\n}) => {\n  const [today, setToday] = useState(new Date());\n\n  useEffect(() => {\n    const updateToday = window.setInterval(() => {\n      const newDate = new Date();\n\n      setToday(newDate);\n\n      // eslint-disable-next-line no-console\n      console.info(newDate.toUTCString().slice(-12, -4));\n      // onUpdateToday(newDate);\n    }, 1000);\n\n    return () => clearInterval(updateToday);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport './App.scss';\nimport { ClockFC } from './components/clockFC';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  prevClockName: string | null;\n};\n\ntype Action = { type: 'SET_CLOCK_NAME'; payload: string };\n\nconst clockReducer = (\n  state: State,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'SET_CLOCK_NAME':\n      return {\n        ...state,\n        prevClockName: state.clockName,\n        clockName: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AppFC: React.FC = () => {\n  const [hasClock, setHasClock] = useState(true);\n  const firstRender = useRef(true);\n\n  const [state, dispatch] = useReducer(clockReducer, {\n    clockName: 'Clock-0',\n    prevClockName: null,\n  });\n\n  const { clockName, prevClockName } = state;\n\n  const handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    setHasClock(false);\n  };\n\n  const handleShowClock = () => {\n    setHasClock(true);\n  };\n\n  useEffect(() => {\n    document.addEventListener('contextmenu', handleHideClock);\n    document.addEventListener('click', handleShowClock);\n\n    const printClockName = window.setInterval(() => {\n      dispatch({ type: 'SET_CLOCK_NAME', payload: getRandomName() });\n    }, 3300);\n\n    return () => {\n      document.removeEventListener('contextmenu', handleHideClock);\n      document.removeEventListener('click', handleShowClock);\n      clearInterval(printClockName);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n\n      return;\n    }\n\n    if (hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clockName]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {hasClock && (\n        <ClockFC\n          clockName={clockName}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\n// import { App } from './App';\nimport { AppFC } from './AppFC';\n\nReactDOM.render(\n  // <App />,\n  <AppFC />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}