{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","updateToday","window","setInterval","newDate","setState","props","onUpdateToday","clearInterval","this","clockName","className","toUTCString","slice","React","Component","getRandomName","value","now","toString","App","hasClock","printToday","printClockName","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","startTimers","_prevProps","prevState","console","debug","info","removeEventListener","stopTimers","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,YAAcC,OAAOC,aAAY,WAC/B,IAAMC,EAAU,IAAIJ,KAEpB,EAAKK,SAAS,CACZN,MAAOK,IAGT,EAAKE,MAAMC,cAAcH,KACxB,KAbL,0DAeE,WACEI,cAAcC,KAAKR,eAhBvB,oBAmBE,WACE,IAAQF,EAAUU,KAAKX,MAAfC,MACAW,EAAcD,KAAKH,MAAnBI,UAER,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGZ,EAAMa,cAAcC,OAAO,IAAK,YAhC3C,GAA2BC,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAGX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVX,UAAW,UACXY,WAAY,IAAItB,MAJpB,EAOEuB,eAAiB,EAPnB,EAsCEhB,cAAgB,SAACH,GAAD,OAAmB,EAAKC,SAAS,CAAEiB,WAAYlB,KAtCjE,EAwCEoB,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEgB,UAAU,KA3C9B,EA8CEM,gBAAkB,WAChB,EAAKtB,SAAS,CAAEgB,UAAU,KA/C9B,uDASE,WACEO,SAASC,iBAAiB,cAAepB,KAAKe,iBAC9CI,SAASC,iBAAiB,QAASpB,KAAKkB,iBACxClB,KAAKqB,gBAZT,gCAeE,SACEC,EACAC,GAEA,MAA4CvB,KAAKX,MAAzCY,EAAR,EAAQA,UAAWW,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAEzBU,EAAUtB,YAAcA,GAAaW,GAEvCY,QAAQC,MAAR,uBAA8BF,EAAUtB,UAAxC,eAAwDA,IAGtDsB,EAAUV,aAAeA,GAAcD,GAEzCY,QAAQE,KAAR,UAAgB1B,KAAKX,MAAMwB,WAAWV,cAAcC,OAAO,IAAK,OA5BtE,kCAgCE,WACEe,SAASQ,oBAAoB,cAAe3B,KAAKe,iBACjDI,SAASQ,oBAAoB,QAAS3B,KAAKkB,iBAC3ClB,KAAK4B,eAnCT,yBAkDE,WAAe,IAAD,OACZ5B,KAAKc,eAAiBrB,OAAOC,aAAY,WACvC,EAAKE,SAAS,CACZK,UAAWM,QAEZ,QAvDP,wBA0DE,WACMP,KAAKc,iBACPf,cAAcC,KAAKc,gBACnBd,KAAKc,eAAiB,KA7D5B,oBAiEE,WACE,MAAgCd,KAAKX,MAA7BuB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKC,UAAU,MAAf,UACE,6CAECU,GACC,cAAC,EAAD,CACEX,UAAWA,EACXH,cAAeE,KAAKF,uBA3EhC,GAAyBO,IAAMC,WCZ/BuB,IAASC,OACP,cAAC,EAAD,IAEAX,SAASY,eAAe,W","file":"static/js/main.d6397a6b.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockProps = {\n  clockName: string;\n  onUpdateToday: (newDate: Date) => void;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  updateToday = window.setInterval(() => {\n    const newDate = new Date();\n\n    this.setState({\n      today: newDate,\n    });\n\n    this.props.onUpdateToday(newDate);\n  }, 1000);\n\n  componentWillUnmount() {\n    clearInterval(this.updateToday);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n  printToday: Date;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    printToday: new Date(),\n  };\n\n  printClockName = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n    this.startTimers();\n  }\n\n  componentDidUpdate(\n    _prevProps: Readonly<{}>,\n    prevState: Readonly<State>,\n  ): void {\n    const { clockName, hasClock, printToday } = this.state;\n\n    if (prevState.clockName !== clockName && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n\n    if (prevState.printToday !== printToday && hasClock) {\n      // eslint-disable-next-line no-console\n      console.info(`${this.state.printToday.toUTCString().slice(-12, -4)}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n    this.stopTimers();\n  }\n\n  onUpdateToday = (newDate: Date) => this.setState({ printToday: newDate });\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  startTimers() {\n    this.printClockName = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  stopTimers() {\n    if (this.printClockName) {\n      clearInterval(this.printClockName);\n      this.printClockName = 0;\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            clockName={clockName}\n            onUpdateToday={this.onUpdateToday}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n// import { AppFC } from './AppFC';\n\nReactDOM.render(\n  <App />,\n  // <AppFC />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}